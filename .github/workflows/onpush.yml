name: Automated Build and Test

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md
      - "*.md"

jobs:
  simple_terraform_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7]
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install slalom dataops library
        run: |
          pip install tqdm
          pip install slalom.dataops
      # - name: Install terraform
      #   run: |
      #     python -m slalom.dataops.env check_installs terraform --install_if_missing
      # - name: Test terraform
      #   run: |
      #     python -m slalom.dataops.infra 
      # - name: Terraform init and plan
      #   run: |
      #     terraform init
      #     terraform plan
      # - name: Terraform apply
      #   run: |
      #     terraform apply -auto-approve
      # - name: Terraform destroy
      #   run: |
      #     terraform destroy -auto-approve
      # - name: 'Terraform Format'
      #   uses: hashicorp/terraform-github-actions@master
      #   with:
      #     tf_actions_version: 0.12.13
      #     tf_actions_subcommand: 'fmt'
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Validate'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'validate'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Plan'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'plan'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
