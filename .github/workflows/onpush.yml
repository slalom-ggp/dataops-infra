name: Automated Build and Test

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md
      - "*.md"

jobs:
  simple_terraform_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        # python-version: [3.7]
        sample-id: ["01", "02"]
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      # - name: Set up Python ${{ matrix.python-version }}
      #   uses: actions/setup-python@v1
      #   with:
      #     python-version: ${{ matrix.python-version }}
      # - name: Install slalom dataops library
      #   run: |
      #     pip install tqdm
      #     pip install slalom.dataops
      # - name: Install terraform
      #   run: |
      #     python -m slalom.dataops.env check_installs terraform --install_if_missing
      # - name: Test terraform
      #   run: |
      #     python -m slalom.dataops.infra 
      # - name: Terraform init and plan
      #   run: |
      #     terraform init
      #     terraform plan
      # - name: Terraform apply
      #   run: |
      #     terraform apply -auto-approve
      # - name: Terraform destroy
      #   run: |
      #     terraform destroy -auto-approve
      - name: 'Install Samples (${{ matrix.sample-id }})'
        run: |
          set -v
          pwd
          ls -la ./samples/aws/*.tf
          cp ./samples/aws/00*.tf .
          cp ./samples/aws/${{ matrix.sample-id }}*.tf .
          ls -la ./*.tf
      - name: 'Terraform Format (Sample #${{ matrix.sample-id }})'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'fmt'
          tf_actions_working_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: 'Terraform Init (Sample #${{ matrix.sample-id }})'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
      - name: 'Terraform Validate (Sample #${{ matrix.sample-id }})'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
      - name: 'Terraform Plan (Sample #${{ matrix.sample-id }})'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
