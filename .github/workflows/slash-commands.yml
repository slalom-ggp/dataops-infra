name: Slash Command CI

on:
  issue_comment:
    types: [created]

jobs:
  format_command:
    runs-on: ubuntu-latest
    name: Execute "/format" slash command
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/format')
    env:
      SLASH_COMMAND: format
    steps:
      - name: Parse Slash Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: eyes
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}
      - name: Echo command (debug)
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'
      - name: Clone git repo
        uses: actions/checkout@v2
      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
          hub pr checkout $PR_NUM
          git config --global user.email "aj.steers@slalom.com"
          git config --global user.name "AJ Steers (CI bot)"
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
      - name: Run Terraform auto-format
        run: terraform fmt -recursive
      - name: Commit and Push
        run: |
          git commit -a -m "GitOps Bot (Autoformat)"
          git push
      - name: Post success reaction
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: rocket
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}
      - name: Post failure reaction
        if: ${{ failure() }}
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: confused
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}

  update_docs_command:
    runs-on: ubuntu-latest
    name: Execute "/update-docs" slash command
    if: github.event.issue.pull_request != '' && contains(github.event.comment.body, '/update-docs')
    env:
      SLASH_COMMAND: update-docs
    steps:
      - name: Parse Slash Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: eyes
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}
      - name: Echo command (debug)
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}'
      - name: Clone git repo
        uses: actions/checkout@v2
      - name: Checkout Pull Request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL="${{ github.event.issue.pull_request.url }}"
          PR_NUM=${PR_URL##*/}
          echo "Checking out from PR #$PR_NUM based on URL: $PR_URL"
          hub pr checkout $PR_NUM
          git config --global user.email "aj.steers@slalom.com"
          git config --global user.name "AJ Steers (CI bot)"
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
      - name: Install Go
        uses: actions/setup-go@v2
      - name: Install terraform-docs
        run: |
          GO111MODULE="on" go get github.com/terraform-docs/terraform-docs@v0.10.0-rc.1
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
          architecture: "x64"
      - name: Rebuild docs
        run: |
          cd autodocs
          python build.py
      - name: Commit and Push
        run: |
          git commit -a -m "GitOps Bot (Autoformat)"
          git push
      - name: Post success reaction
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: rocket
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}
      - name: Post failure reaction
        if: ${{ failure() }}
        uses: xt0rted/slash-command-action@v1
        with:
          permission-level: admin
          reaction-type: confused
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: ${{ env.SLASH_COMMAND }}
