name: Terraform CI/CD

on:
  push:
    branches:
      - "**"
    paths-ignore:
      - docs/**.md
      - "*.md"

jobs:
  terraform_linter:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: "Terraform Linter Check (Formatting)"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: fmt
          tf_actions_working_dir: .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_CLI_ARGS: -recursive

  tf_test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 8
      matrix:
        # python-version: [3.7]
        sample-id:
          - airflow-on-aws
          - azure
          - dbt-and-singer-on-aws
          - redshift-dw
          - tableau-on-aws
          - s3-lambda-trigger
    steps:
      - name: Clone git repo
        uses: actions/checkout@v1
      - name: "Terraform Init (Prerun)"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: init
          tf_actions_working_dir: ./catalog/aws/prereqs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
          TF_VAR_aws_region: us-east-2
          TF_VAR_project_shortname: CI-Test-1234-${{ matrix.sample-id }}
      - name: "Terraform Init (Sample #${{ matrix.sample-id }})"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: init
          tf_actions_working_dir: ./samples/${{ matrix.sample-id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
      - name: "Terraform Validate (Sample #${{ matrix.sample-id }})"
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: validate
          tf_actions_working_dir: ./samples/${{ matrix.sample-id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_CLI_ARGS_backend: false
